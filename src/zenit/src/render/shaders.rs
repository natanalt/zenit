pub struct Shader {
    pub metadata: toml::value::Table,
    pub module: wgpu::ShaderModule,
}

/// Loads a shader from `OUT_DIR` (generated by the build script), based on
/// given filename (like `"example_triangle.shader"`).
///
/// Takes a valid [`wgpu::Device`] as the first parameter, and a literal path
/// to the shader as the second one.
#[macro_export]
macro_rules! include_shader {
    ($device:expr, $name:expr) => {
        $crate::render::shaders::Shader {
            metadata: ::toml::from_str(include_str!(concat!(env!("OUT_DIR"), "/", $name, ".toml")))
                .unwrap(),
            module: ($device).create_shader_module(&::wgpu::include_spirv!(concat!(
                env!("OUT_DIR"),
                "/",
                $name,
                ".spv"
            ))),
        }
    };
}
